{"version":3,"sources":["actions/index.js","components/member/MemberSelect.js","components/Modal.js","containers/PasswordSelector.js","components/member/MemberCreateModal.js","containers/member/MemberPanel.js","components/player/PlayerListItem.js","components/player/PlayerEditModal.js","components/player/PlayerCreateModal.js","containers/player/PlayerPanel.js","components/court/CourtSelect.js","components/player/PlayerSelect.js","containers/player/PlayerSelector.js","components/court/CourtCreateModal.js","components/court/ReservationListItem.js","components/court/CourtEditModal.js","containers/court/CourtPanel.js","components/App.js","reducers/people_reducer.js","reducers/selector_reducer.js","reducers/court_reducer.js","reducers/display_reducer.js","reducers/index.js","utils/toast.js","serviceWorker.js","index.js"],"names":["BASE_URL","MEMBERS","PLAYERS","COURTS","CREATE_PLAYER_ENDPOINT","DELETE_PLAYER_ENDPOINT","CREATE_COURT_ENDPOINT","REMOVE_RESERVATION_ENDPOINT","FETCH_MEMBERS","FETCH_PLAYERS","FETCH_COURTS","CREATE_PLAYER","REMOVE_PLAYER","UPDATE_PLAYER","CREATE_COURT","REMOVE_RESERVATION","SELECT_PLAYER","DESELECT_PLAYERS","START_UPDATING_PLAYER","CANCEL_PLAYER_UPDATE","SELECT_MEMBER","SELECT_COURT_NUMBER","SELECT_COURT_RANDOMS","FILTER_PLAYER","FILTER_MEMBER","CANCEL_MEMBER_CREATE","SET_TOAST","DISPLAY_MODAL","CLEAR_MODAL","requestPlayers","request","getRequest","type","payload","MODEL","axios","get","deselectPlayers","selectCourtNumber","_ref","_ref$courtNumber","courtNumber","_callee","player","name","password","fail","regenerator_default","a","wrap","_context","prev","next","removePlayer","sent","abrupt","createPlayer","stop","_x4","_removePlayer","apply","this","arguments","_callee2","_context2","post","then","catch","error","console","log","_x5","_createPlayer","_callee3","_context3","_callee4","court","_context4","res","_callee5","reservation","_context5","token","displayModal","modalId","length","undefined","clearModal","Promise","resolve","MemberSelect","member","isNewMember","highlighted","dispatch","useDispatch","displayName","isNew","concat","react_default","createElement","onClick","selectMember","interceptors","use","config","headers","data","qs","stringify","Modal","children","_ref$modalId","onCancel","onSuccess","_ref$successEnabled","successEnabled","title","isOpen","useSelector","state","displays","modalToDisplay","modal","visible","onDidDismiss","onOk","okButtonProps","disabled","passwords","PasswordSelector","selectedPassword","updatePassword","isSelected","handleUpdatePassword","className","map","es_button","key","MemberCreateModal","selected","memberToCreate","_useState","useState","_useState2","Object","slicedToArray","memberPassword","updateMemberPassword","Content","Layout","Header","MemberSelector","memberChunks","people","filteredMembers","chunkedMembers","memberNameFilter","updateScreenInformation","requestMembers","useEffect","layout","input","placeholder","size","prefix","icon","style","color","value","onChange","event","memberText","target","memberChunk","index","row","col","span","_id","PlayerListItem","playerOptions","Fragment","fontSize","startUpdatingPlayer","divider","moreButton","popover","placement","content","trigger","es_list","Item","actions","Meta","description","PlayerEditModal","playerToUpdate","newPlayerPassword","updateNewPlayerPassword","_useState3","_useState4","newPlayerName","updateNewPlayerName","_x","_x2","_x3","_updatePlayer","updatePlayer","addonBefore","e","PlayerAddModal","updateName","clearChanges","playerCreatable","Footer","PlayerPanel","_useSelector","filteredPlayers","partitionedPlayers","_useSelector2","reservedPlayers","availablePlayers","playerNameFilter","PlayerPanel_Header","playerText","PlayerPanel_Content","CourtSelect","card","time","PlayerSelect","selectedPlayers","ignoreEdit","players","_","has","selectedColor","selectPlayer","es_checkbox","checked","PlayerSelector","useCourtRandoms","es_radio","Group","defaultValue","Button","CourtCreateModal","setCourtNumber","delay","setDelay","names","playerNames","randoms","courtCreatable","_x6","_createCourt","createCourt","ReservationListItem","join","reservationOption","_x7","_removeReservation","removeReservation","CourtEditModal","reservations","courts","courtGroups","twoMinutesMillis","CourtPanel","current","upcoming","requestCourts","interval","setInterval","clearInterval","courtsFor","courtList","CourtPanel_Content","CourtPanel_Footer","Title","Typography","PLAYER_PANE","COURT_PANE","MEMBER_PANE","defaultState","members","reservedPlayerNames","CHUNK_SIZE","nameContainsFilter","nameFilter","toLower","includes","chunkify","list","chunk","partitionedPlayerList","partition","filteredPlayerList","isEmpty","filter","updateStateForPlayers","objectSpread","now","Date","splitReservations","formattedReservations","preformattedReservation","groupBy","formatReservation","randomlessReservations","reject","reduceRight","flattened","previous","last","startAt","isSame","endAt","reservationsCanBeCombined","isCurrentCourt","mergeReservations","sortBy","sortedCourts","courtsWithReservations","each","_$partition","_$partition2","currentCourts","upcomingCourts","formatCurrentCourt","formatUpcomingCourt","moment","tz","startString","format","duration","formatTime","formatString","hours","utc","asMilliseconds","rootReducer","combineReducers","action","unset","values","set","updatePlayerSelections","futureUseCourtRandoms","upperFirst","toConsumableArray","push","playerName","playerToRemove","_ref2","updatePlayerInformation","flatten","playersOnCourt","union","playersRemoved","without","reservationToken","toastMessage","toast","message","Boolean","window","location","hostname","match","createStoreWithMiddleware","applyMiddleware","ReduxPromise","createStore","ReactDOM","render","es","store","reducers","selectedPane","setSelectedPane","pane","headerCol","PANE","text","level","header","App_Header","justify","align","body","App_Content","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8a4e0ee3.chunk.js","sourcesContent":["import axios from \"axios\";\nimport qs from \"querystring\";\n\nconst BASE_URL = \"https://bab.moepas.com/api/\";\n\nconst MEMBERS = \"members\";\nconst PLAYERS = \"players\";\nconst COURTS = \"courts\";\nconst SESSIONS = \"sessions\";\n\nconst CREATE_PLAYER_ENDPOINT = \"players/add\";\nconst DELETE_PLAYER_ENDPOINT = \"players/delete\";\n\nconst CREATE_COURT_ENDPOINT = \"courts/register\";\nconst REMOVE_RESERVATION_ENDPOINT = \"courts/unregister\";\n\nexport const FETCH_MEMBERS = 'FETCH_MEMBERS';\nexport const FETCH_PLAYERS = 'FETCH_PLAYERS';\nexport const FETCH_COURTS = 'FETCH_COURTS';\nexport const FETCH_SESSIONS = 'FETCH_SESSIONS';\n\n// non get player requests\nexport const CREATE_PLAYER = 'CREATE_PLAYER';\nexport const REMOVE_PLAYER = 'REMOVE_PLAYER';\nexport const UPDATE_PLAYER = 'UPDATE_PLAYER';\n\n// non get Court requests\nexport const CREATE_COURT = 'CREATE_COURT';\nexport const REMOVE_RESERVATION = 'REMOVE_RESERVATION';\n\nexport const SELECT_PLAYER = 'SELECT_PLAYER';\nexport const DESELECT_PLAYERS = 'DESELECT_PLAYERS';\nexport const START_UPDATING_PLAYER = 'START_UPDATING_PLAYER';\nexport const CANCEL_PLAYER_UPDATE = 'CANCEL_PLAYER_UPDATE';\nexport const SELECT_MEMBER = 'SELECT_MEMBER';\nexport const SELECT_COURT_NUMBER = 'SELECT_COURT_NUMBER';\nexport const SELECT_COURT_RANDOMS = 'SELECT_COURT_RANDOMS';\n\nexport const FILTER_PLAYER = 'FILTER_PLAYER';\nexport const FILTER_MEMBER = 'FILTER_MEMBER';\n\nexport const CANCEL_MEMBER_CREATE = 'CANCEL_MEMBER_CREATE';\n\nexport const SET_TOAST = \"SET_TOAST\";\nexport const DISPLAY_MODAL = \"DISPLAY_MODAL\";\nexport const CLEAR_MODAL = \"CLEAR_MODAL\";\n\n// Setup the content-type and make sure data is form-encoded.\naxios.interceptors.request.use((config) => {\n    config.headers[\"Content-type\"] = 'application/x-www-form-urlencoded';\n    config.data = qs.stringify(config.data);\n    return config;\n});\n\nexport function requestMembers() {\n    const request = getRequest(MEMBERS);\n    // const request = { data: sampleMemberData };\n\n    return {\n        type: FETCH_MEMBERS,\n        payload: request\n    };\n}\n\nexport function requestPlayers() {\n    const request = getRequest(PLAYERS);\n    // const request = {data: samplePlayerData};\n\n    return {\n        type: FETCH_PLAYERS,\n        payload: request\n    };\n}\n\nexport function requestCourts() {\n    const request = getRequest(COURTS);\n    // const request = {data: sampleCourtData};\n\n    return {\n        type: FETCH_COURTS,\n        payload: request\n    };\n}\n\nfunction getRequest(MODEL) {\n    return axios.get(BASE_URL + MODEL);\n}\n\nexport function updateSession(startingSession) {\n    if (startingSession) {\n\n    }\n}\n\nexport function selectPlayer(player) {\n    return {\n        type: SELECT_PLAYER,\n        payload: player\n    };\n}\n\nexport function deselectPlayers() {\n    return {\n        type: DESELECT_PLAYERS\n    };\n}\n\nexport function selectMember(member) {\n    return {\n        type: SELECT_MEMBER,\n        payload: member\n    };\n}\n\nexport function selectCourtNumber({ courtNumber = -1 }) {\n    return {\n        type: SELECT_COURT_NUMBER,\n        payload: courtNumber\n    };\n}\n\nexport function selectCourtRandoms() {\n    return {\n        type: SELECT_COURT_RANDOMS\n    };\n}\n\nexport function playerFilterChanged(playerText) {\n    return {\n        type: FILTER_PLAYER,\n        payload: playerText\n    };\n}\n\n\nexport function memberFilterChanged(memberText) {\n    return {\n        type: FILTER_MEMBER,\n        payload: memberText\n    };\n}\n\n\nexport function cancelCreatingMember() {\n    return {\n        type: CANCEL_MEMBER_CREATE\n    };\n}\n\nexport function startUpdatingPlayer(player) {\n    return {\n        type: START_UPDATING_PLAYER,\n        payload: player\n    };\n}\n\nexport async function updatePlayer(player, name, password) {\n    const fail = { type: SET_TOAST, payload: \"Unable to update player\" };\n\n    const removeResult = await removePlayer(player);\n    if (removeResult.type === SET_TOAST) {\n        return fail;\n    }\n\n    const createResult = await createPlayer({ name, password });\n    if (createResult.type === SET_TOAST) {\n        return fail;\n    }\n\n    return {\n        type: UPDATE_PLAYER,\n        payload: { player, name, password }\n    };\n}\n\nexport function cancelPlayerUpdate() {\n    return {\n        type: CANCEL_PLAYER_UPDATE\n    };\n}\n\nexport async function removePlayer(player) {\n    let type = REMOVE_PLAYER;\n    let payload = null;\n\n    await axios.post(\n        BASE_URL + DELETE_PLAYER_ENDPOINT,\n        player\n    ).then(() => {\n        payload = player\n    }).catch(error => {\n        console.log(error);\n        type = SET_TOAST;\n        payload = \"Unable to delete the player\";\n    });\n\n    return {\n        type,\n        payload\n    };\n}\n\nexport async function createPlayer(player) {\n    let type = CREATE_PLAYER;\n    let payload = null;\n\n    await axios.post(\n        BASE_URL + CREATE_PLAYER_ENDPOINT,\n        player\n    ).then(() => {\n        payload = player\n    }).catch(error => {\n        console.log(error);\n        type = SET_TOAST;\n        payload = \"Unable to create the player\";\n    });\n\n    return {\n        type,\n        payload\n    };\n}\n\nexport async function createCourt(court) {\n    let type = CREATE_COURT;\n    let payload = null;\n\n    await axios.post(\n        BASE_URL + CREATE_COURT_ENDPOINT,\n        court\n    ).then(res => {\n        payload = res\n    }).catch(error => {\n        console.log(error);\n        type = SET_TOAST;\n        payload = \"Unable to create the court\";\n    });\n\n    return {\n        type,\n        payload\n    };\n}\n\nexport async function removeReservation(reservation) {\n    let type = REMOVE_RESERVATION;\n    let payload = null;\n\n    await axios.post(\n        BASE_URL + REMOVE_RESERVATION_ENDPOINT,\n        { token : reservation.token}\n    ).then(() => {\n        payload = reservation;\n    }).catch(error => {\n        console.log(error);\n        type = SET_TOAST;\n        payload = \"Unable to remove reservation\";\n    });\n\n    return {\n        type,\n        payload\n    };\n}\n\nexport function displayModal(modalId = \"pageModal\") {\n    return {\n        type: DISPLAY_MODAL,\n        payload: modalId\n    };\n}\n\nexport function clearModal() {\n    return {\n        type: CLEAR_MODAL,\n        payload: Promise.resolve()\n    };\n}\n","import React from 'react';\nimport {useDispatch} from 'react-redux';\nimport {displayModal, selectMember} from \"../../actions\";\n\nexport default function MemberSelect({ member, highlighted: isNewMember }) {\n    const dispatch = useDispatch();\n\n    const handleSelectMember = () => {\n        if (!isNewMember) {\n            dispatch(selectMember(member));\n        }\n        dispatch(displayModal());\n    };\n\n    let displayName = member.isNew ? `Create password for: \"${member.name}\"` : member.name;\n\n    return (\n        <span\n            onClick={handleSelectMember}\n        >\n            {displayName}\n        </span>\n    )\n}\n","import React from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {clearModal} from \"../actions\";\nimport {Modal as AntModal} from 'antd';\n\nexport function Modal({ children, modalId = \"pageModal\", onCancel, onSuccess, successEnabled = true, title }) {\n    const dispatch = useDispatch();\n    const modalToDisplay = useSelector(state => state.displays.modalToDisplay);\n\n    const handleCloseModal = () => dispatch(clearModal());\n    const isOpen = modalToDisplay === modalId;\n    const handleCancel = () => {\n        dispatch(clearModal()).then(() => {\n            if (onCancel) {\n                onCancel();\n            }\n        });\n    };\n\n    const handleSuccess = () => {\n        dispatch(clearModal()).then(() => {\n            if (onSuccess) {\n                onSuccess();\n            }\n        });\n    };\n\n    return (\n        // deprecated in favor of moving to routing\n        <AntModal\n            visible={isOpen}\n            onDidDismiss={handleCloseModal}\n            title={title}\n            onOk={handleSuccess}\n            onCancel={handleCancel}\n            okButtonProps={{ disabled: !successEnabled }}\n        >\n            {children}\n        </AntModal>\n    );\n}\n","import React from 'react';\nimport {Button} from \"antd\";\n\nconst passwords = [\n    'mouse',\n    'ox',\n    'tiger',\n    'rabbit',\n    'dragon',\n    'snake',\n    'horse',\n    'goat',\n    'monkey',\n    'rooster',\n    'dog',\n    'pig',\n    'cat'\n];\n\nexport default function PasswordSelector({ selectedPassword, updatePassword }) {\n    const isSelected = (password) => password === selectedPassword;\n    const handleUpdatePassword = (password) => () => updatePassword(password);\n\n    return (\n        <div className=\"d-inline-flex flex-wrap justify-content-center\">\n            {passwords.map(password => (\n                <Button disabled={isSelected(password)}\n                           onClick={handleUpdatePassword(password)}\n                           key={password}\n                        className=\"m-1\"\n                >\n                    {password}\n                </Button>\n            ))}\n        </div>\n    );\n}\n","import React, {useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Modal} from '../../components/Modal';\nimport {cancelCreatingMember, createPlayer} from \"../../actions\";\nimport PasswordSelector from \"../../containers/PasswordSelector\";\n\nexport function MemberCreateModal() {\n    const dispatch = useDispatch();\n\n    const member = useSelector(state => state.selected.memberToCreate);\n    const [memberPassword, updateMemberPassword] = useState(\"\");\n\n    const handleCancel = () => dispatch(cancelCreatingMember());\n    const handlePlayerCreate = () => dispatch(createPlayer({ name: member.name, password: memberPassword }));\n\n    return (\n        <Modal\n            onCancel={handleCancel}\n            onSuccess={handlePlayerCreate}\n            title={member.name}>\n\n            <PasswordSelector selectedPassword={memberPassword}\n                              updatePassword={updateMemberPassword}/>\n        </Modal>\n    );\n}\n","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {memberFilterChanged, requestMembers} from \"../../actions\";\nimport MemberSelect from \"../../components/member/MemberSelect\";\n\nimport {MemberCreateModal} from '../../components/member/MemberCreateModal';\nimport {Layout, Row, Col, Input, Icon} from \"antd\";\n\nconst { Content, Header } = Layout;\n\nexport default function MemberSelector() {\n    const dispatch = useDispatch();\n    const memberChunks = useSelector(state => state.people.filteredMembers || state.people.chunkedMembers);\n    const memberNameFilter = useSelector(state => state.selected.memberNameFilter);\n\n    const updateFilter = (event) => dispatch(memberFilterChanged(event.target.value));\n\n    const updateScreenInformation = () => dispatch(requestMembers());\n\n    useEffect(() => {\n        updateScreenInformation()\n    }, []);\n\n    const createRow = (memberChunk, index) => (\n        <Row key={index}>\n            {memberChunk.map((member, index) => (\n                <Col className=\"p-2\" span={8} key={index}>\n                    <MemberSelect member={member} key={member._id} isNewMember={member.isNew}/>\n                </Col>\n            ))}\n        </Row>\n    );\n\n    return (\n        <Layout>\n            <Header>\n                <Input className=\"pr-2 pl-2\"\n                       placeholder=\"Filter or add Member\"\n                       size=\"large\"\n                       prefix={<Icon type=\"search\" style={{ color: 'rgba(0,0,0,.25)' }}/>}\n                       value={memberNameFilter}\n                       onChange={updateFilter}\n                />\n            </Header>\n\n            <Content>\n                {memberChunks.map(createRow)}\n\n                <MemberCreateModal/>\n            </Content>\n        </Layout>\n    );\n}\n","import React from 'react';\nimport {useDispatch} from 'react-redux';\nimport {displayModal, removePlayer, startUpdatingPlayer} from \"../../actions\";\nimport {List, Popover, Icon, Divider} from 'antd';\n\nexport default function PlayerListItem({ player }) {\n    const dispatch = useDispatch();\n\n    const handleEditButton = () => {\n        dispatch(startUpdatingPlayer(player));\n        dispatch(displayModal(\"playerEditModal\"));\n    };\n\n    const handleRemoveButton = () => {\n        dispatch(removePlayer(player));\n    };\n\n    const playerOptions = (\n        <>\n            <Icon type=\"edit\" style={{ fontSize: '20px' }} onClick={handleEditButton}/>\n            <Divider type=\"vertical\"/>\n            <Icon type=\"delete\" style={{ fontSize: '20px', color: 'red' }} onClick={handleRemoveButton}/>\n        </>\n    );\n\n    const moreButton = (\n        <Popover placement=\"left\"\n                 content={playerOptions}\n                 trigger=\"click\">\n            <Icon type=\"more\"/>\n        </Popover>\n    );\n\n    return (\n        <List.Item\n            actions={[moreButton]}\n            className=\"pl-2\"\n            key={player._id}>\n            <List.Item.Meta\n                description={player.name}\n            />\n            <div>\n                {player.password}\n            </div>\n        </List.Item>\n    );\n}","import {useDispatch, useSelector} from \"react-redux\";\nimport {cancelPlayerUpdate, updatePlayer} from \"../../actions\";\nimport React, {useState} from \"react\";\nimport PasswordSelector from \"../../containers/PasswordSelector\";\nimport {Modal} from \"../Modal\";\nimport {Divider, Input} from \"antd\";\n\nexport default function PlayerEditModal() {\n    const dispatch = useDispatch();\n\n    const player = useSelector(state => state.selected.playerToUpdate);\n    const [newPlayerPassword, updateNewPlayerPassword] = useState(player.password);\n    const [newPlayerName, updateNewPlayerName] = useState(player.name);\n\n    const handleCancel = () => dispatch(cancelPlayerUpdate());\n    const handlePlayerUpdate = () => dispatch(updatePlayer(player, newPlayerName, newPlayerPassword));\n    const handleNameChange = (e) => updateNewPlayerName(e.target.value);\n\n    const title = <>\n        {player.name} : {player.password}\n    </>;\n\n    return (\n        <Modal modalId=\"playerEditModal\"\n               onCancel={handleCancel}\n               onSuccess={handlePlayerUpdate}\n               title={title}>\n\n            <Input className=\"mb-2\"\n                   addonBefore=\"Name:\"\n                   placeholder=\"Enter Name\"\n                   value={newPlayerName}\n                   onChange={handleNameChange}/>\n\n            <PasswordSelector selectedPassword={newPlayerPassword}\n                              updatePassword={updateNewPlayerPassword}/>\n\n            <Divider/>\n\n            <span className=\"text-muted\">Is this correct?</span> {newPlayerName} : {newPlayerPassword}\n        </Modal>\n    );\n}","import {useDispatch} from \"react-redux\";\nimport {createPlayer} from \"../../actions\";\nimport React, {useState} from \"react\";\nimport {Input, Divider} from 'antd';\nimport PasswordSelector from \"../../containers/PasswordSelector\";\nimport {Modal} from \"../Modal\";\n\nexport default function PlayerAddModal() {\n    const dispatch = useDispatch();\n\n    const [password, updatePassword] = useState(\"\");\n    const [name, updateName] = useState(\"\");\n\n    const clearChanges = () => {\n        updatePassword(\"\");\n        updateName(\"\");\n    };\n    const handlePlayerCreate = () => {\n        dispatch(createPlayer({ name, password }));\n        clearChanges();\n    };\n    const handleNameChange = (e) => updateName(e.target.value);\n    const playerCreatable = name && password;\n\n    return (\n        <Modal\n            onCancel={clearChanges}\n            onSuccess={handlePlayerCreate}\n            successEnabled={playerCreatable}\n            title=\"Create new Player\">\n\n            <Input className=\"mb-2\"\n                   addonBefore=\"Name:\"\n                   placeholder=\"Enter Name\"\n                   value={name}\n                   onChange={handleNameChange}/>\n\n            <PasswordSelector selectedPassword={password}\n                              updatePassword={updatePassword}/>\n\n            <Divider/>\n\n            <span className=\"text-muted\">Is this correct?</span> {name} : {password}\n        </Modal>\n    );\n\n}","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {displayModal, playerFilterChanged, requestPlayers} from \"../../actions\";\nimport PlayerListItem from \"../../components/player/PlayerListItem\";\n\nimport PlayerEditModal from \"../../components/player/PlayerEditModal\";\nimport PlayerCreateModal from \"../../components/player/PlayerCreateModal\";\nimport {Layout, List, Input, Icon, Button} from \"antd\";\n\nconst { Content, Footer, Header } = Layout;\n\nexport default function PlayerPanel() {\n    const dispatch = useDispatch();\n    const [reservedPlayers, availablePlayers] = useSelector(state => state.people.filteredPlayers || state.people.partitionedPlayers);\n    const playerNameFilter = useSelector(state => state.selected.playerNameFilter);\n\n    const updateFilter = (event) => dispatch(playerFilterChanged(event.target.value));\n    const handleAddClick = () => dispatch(displayModal());\n\n    const updateScreenInformation = () => dispatch(requestPlayers());\n\n    useEffect(() => {\n        updateScreenInformation();\n    }, []);\n\n    return (\n        <Layout>\n            <Header>\n                <Input\n                    className=\"pr-2 pl-2\"\n                    placeholder=\"Filter or add Player\"\n                    size=\"large\"\n                    prefix={<Icon type=\"search\" style={{ color: 'rgba(0,0,0,.25)' }}/>}\n                    value={playerNameFilter}\n                    onChange={updateFilter}\n                />\n            </Header>\n\n            <Content className=\"h-100\">\n                <List className=\"pb-5\">\n                    <div className=\"list-header\">Available Players</div>\n                    {availablePlayers.map(player => <PlayerListItem player={player} key={player._id}/>)}\n\n                    <div className=\"list-header\">Players in use</div>\n                    {reservedPlayers.map(player => <PlayerListItem player={player} key={player._id}/>)}\n                </List>\n            </Content>\n\n            <Footer>\n                <Button className=\"w-100\"\n                        onClick={handleAddClick}>\n                    Add Player\n                </Button>\n            </Footer>\n\n            <PlayerEditModal/>\n            <PlayerCreateModal/>\n        </Layout>\n    );\n}\n","import React from 'react';\nimport {Card} from 'antd';\nimport {displayModal, selectCourtNumber} from \"../../actions\";\nimport {useDispatch} from \"react-redux\";\n\nexport default function CourtSelect({ court }) {\n    const dispatch = useDispatch();\n\n    const handleSelection = () => {\n        dispatch(selectCourtNumber(court));\n        dispatch(displayModal(\"courtEditModal\"));\n    };\n\n    return (\n        <Card className=\"m-3\"\n              size=\"small\"\n              type=\"inner\"\n              title={`Court ${court.courtNumber}`}\n              onClick={handleSelection}>\n\n            {court.time}\n        </Card>\n    )\n}","import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {selectPlayer} from \"../../actions\";\nimport _ from 'lodash';\n\nimport {List, Checkbox} from 'antd';\n\nexport default function PlayerSelect({ player, ignoreEdit }) {\n    const selectedPlayers = useSelector(state => state.selected.players);\n    const dispatch = useDispatch();\n\n    const isSelected = _.has(selectedPlayers, player._id);\n\n    const handleSelectPlayer = () => dispatch(selectPlayer(player));\n\n    const selectedColor = isSelected ? \"text-primary\" : \"text-dark\";\n\n    return (\n        <List.Item onClick={handleSelectPlayer}>\n            <List.Item.Meta\n                description={\n                    <Checkbox checked={isSelected}>\n                        <span className={selectedColor}>{player.name}</span>\n                    </Checkbox>}\n            />\n            <div>\n                <span className={selectedColor}>{player.password}</span>\n            </div>\n        </List.Item>\n    )\n}","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {deselectPlayers, requestPlayers, selectCourtRandoms} from \"../../actions\";\nimport PlayerSelect from \"../../components/player/PlayerSelect\";\n\nimport {List, Radio} from 'antd';\n\nexport default function PlayerSelector() {\n    const [_, availablePlayers] = useSelector(state => state.people.filteredPlayers || state.people.partitionedPlayers);\n    const useCourtRandoms = useSelector(state => state.selected.useCourtRandoms);\n    const dispatch = useDispatch();\n\n    const handleRandomsChecked = () => {\n        const futureUsingRandoms = !useCourtRandoms;\n        if (futureUsingRandoms) {\n            dispatch(deselectPlayers());\n        }\n\n        dispatch(selectCourtRandoms());\n    };\n\n    useEffect(() => {\n        dispatch(requestPlayers());\n    }, []);\n\n    return (\n        <List>\n            <Radio.Group className=\"mb-1 d-flex justify-content-center\"\n                         onChange={handleRandomsChecked}\n                         defaultValue={useCourtRandoms}>\n                <Radio.Button value={false} checked={!useCourtRandoms}>Use Players?</Radio.Button>\n                <Radio.Button value={true} checked={useCourtRandoms}>Use Randoms?</Radio.Button>\n            </Radio.Group>\n\n            <div className=\"list-header\">Available players</div>\n\n            {availablePlayers.map(player => (\n                <PlayerSelect player={player} key={player._id}/>\n            ))}\n        </List>\n    );\n}\n","import React, {useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {createCourt, deselectPlayers} from \"../../actions\";\nimport PlayerSelector from '../../containers/player/PlayerSelector';\nimport {Modal} from '../Modal';\n\nimport {Input} from 'antd';\n\nexport function CourtCreateModal() {\n    const dispatch = useDispatch();\n\n    const [courtNumber, setCourtNumber] = useState(0);\n    const [delay, setDelay] = useState(0);\n    const names = useSelector(state => state.selected.playerNames);\n    const randoms = useSelector(state => state.selected.useCourtRandoms);\n    const courtCreatable = useSelector(state => state.selected.courtCreatable);\n\n    const handleCancel = () => dispatch(deselectPlayers());\n    const handleCreateCourt = () => {\n        dispatch(createCourt({ courtNumber, names, delay, randoms }));\n        dispatch(deselectPlayers());\n    };\n\n    return (\n        <Modal\n            onCancel={handleCancel}\n            onSuccess={handleCreateCourt}\n            successEnabled={courtCreatable}\n            title=\"Create Court\">\n\n            <Input\n                addonBefore=\"Court Number:\"\n                placeholder=\"Enter Court Number\"\n                type=\"number\"\n                value={courtNumber}\n                onChange={(e) => setCourtNumber(e.target.value)}/>\n\n            <Input\n                className=\"mb-2\"\n                addonBefore=\"Court Delay:\"\n                placeholder=\"Enter Delay\"\n                type=\"number\"\n                value={delay}\n                onChange={(e) => setDelay(e.target.value)}/>\n\n            <PlayerSelector/>\n\n        </Modal>\n    );\n}\n","import React from 'react';\nimport {useDispatch} from \"react-redux\";\nimport {removeReservation} from \"../../actions\";\nimport {List, Popover, Icon} from 'antd';\n\nexport default function ReservationListItem({ reservation }) {\n    const dispatch = useDispatch();\n\n    const names = (reservation.players.join(\" \")) || \"randoms\";\n\n    const handleReservationDelete = () => {\n        dispatch(removeReservation(reservation));\n    };\n\n    const reservationOption = (\n        <Icon type=\"delete\" style={{ fontSize: '20px', color: 'red' }} onClick={handleReservationDelete}/>\n    );\n\n    const moreButton = (\n        <Popover placement=\"left\"\n                 content={reservationOption}\n                 trigger=\"click\">\n            <Icon type=\"more\"/>\n        </Popover>\n    );\n\n    return (\n        <List.Item value={reservation._id}\n                   actions={[moreButton]}>\n            <List.Item.Meta description={names}/>\n            <div className=\"text-muted\">\n                {reservation.time}\n            </div>\n        </List.Item>\n    );\n}\n","import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {clearModal, selectCourtNumber} from \"../../actions\";\nimport {Modal} from '../Modal';\nimport {List} from 'antd';\nimport ReservationListItem from './ReservationListItem';\n\nexport function CourtEditModal() {\n    const dispatch = useDispatch();\n\n    const courtNumber = useSelector(state => state.selected.courtNumber);\n    const reservations = useSelector(state => state.courts.courtGroups[courtNumber]);\n    const modalToDisplay = useSelector(state => state.displays.modalToDisplay);\n\n    if (modalToDisplay === \"courtEditModal\" && !reservations) {\n        dispatch(clearModal());\n    }\n\n    const handleCancel = () => dispatch(selectCourtNumber(-1));\n\n    return (\n        <Modal modalId=\"courtEditModal\"\n               onCancel={handleCancel}\n               title={`Court ${courtNumber}`}>\n\n            <List>\n                {reservations && reservations.map(reservation => <ReservationListItem reservation={reservation}/>)}\n            </List>\n        </Modal>\n    );\n}\n","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {displayModal, requestCourts, requestPlayers} from \"../../actions\";\nimport CourtSelect from \"../../components/court/CourtSelect\";\nimport {List, Layout, Button} from 'antd';\n\nimport {CourtCreateModal} from '../../components/court/CourtCreateModal';\nimport {CourtEditModal} from \"../../components/court/CourtEditModal\";\n\nconst { Content, Footer } = Layout;\n\nconst twoMinutesMillis = 120000;\n\nexport default function CourtPanel() {\n    const dispatch = useDispatch();\n    const { current, upcoming } = useSelector(state => state.courts);\n\n    const handleAddClick = () => dispatch(displayModal());\n\n    function updateScreenInformation() {\n        return dispatch(requestCourts()).then(() => dispatch(requestPlayers()));\n    }\n\n    useEffect(() => {\n        updateScreenInformation();\n    }, []);\n\n    useEffect(() => {\n        const interval = setInterval(updateScreenInformation, twoMinutesMillis);\n        return () => clearInterval(interval);\n    }, []);\n\n    const courtsFor = (courtList) => {\n        return courtList.map(court => (\n            <CourtSelect court={court}\n                         key={court._id}/>\n        ));\n    };\n\n    return (\n        <Layout>\n            <Content>\n                <List>\n                    <div className=\"list-header\">Current Courts</div>\n\n                    {courtsFor(current)}\n\n                    <div className=\"list-header\">Upcoming Courts</div>\n\n                    {courtsFor(upcoming)}\n                </List>\n            </Content>\n\n            <Footer>\n                <Button className=\"w-100\"\n                        onClick={handleAddClick}>\n                    Add Court\n                </Button>\n            </Footer>\n\n            <CourtCreateModal/>\n            <CourtEditModal/>\n        </Layout>\n    );\n}\n","/* eslint-disable default-case */\nimport React, {useState} from 'react';\nimport '../style/App.css';\nimport MemberPanel from '../containers/member/MemberPanel';\nimport PlayerPanel from '../containers/player/PlayerPanel';\nimport CourtPanel from '../containers/court/CourtPanel';\nimport {Col, Layout, Row, Typography} from 'antd';\n\nconst { Title} = Typography;\n\nconst { Header, Content} = Layout;\n\nconst PLAYER_PANE = \"PLAYER_PANE\";\nconst COURT_PANE = \"COURT_PANE\";\nconst MEMBER_PANE = \"MEMBER_PANE\";\n\nexport default function App() {\n    const [selectedPane, setSelectedPane] = useState(COURT_PANE);\n\n    let pane = null;\n\n    switch (selectedPane) {\n        case PLAYER_PANE:\n            pane = <PlayerPanel/>;\n            break;\n\n        case COURT_PANE:\n            pane = <CourtPanel/>;\n            break;\n\n        case MEMBER_PANE:\n            pane = <MemberPanel/>;\n    }\n\n    const headerCol = (PANE, text) => (\n        <Col span={8} onClick={() => setSelectedPane(PANE)}>\n            <Title level={3}>{text}</Title>\n        </Col>\n    );\n\n    const header = (\n        <Header className=\"bg-light main-header\">\n            <Row justify=\"space-around\" align=\"middle\">\n                {headerCol(COURT_PANE, \"Courts\")}\n                {headerCol(PLAYER_PANE, \"Players\")}\n                {headerCol(MEMBER_PANE, \"Members\")}\n            </Row>\n        </Header>\n    );\n\n    const body = (\n        <Content>\n            {pane}\n        </Content>\n    );\n\n    return (\n        <Layout className=\"main-layout\">\n            {header}\n\n            {body}\n        </Layout>\n    );\n}\n","/* eslint-disable default-case */\nimport {\n    CANCEL_MEMBER_CREATE,\n    CREATE_COURT,\n    CREATE_PLAYER,\n    FETCH_COURTS,\n    FETCH_MEMBERS,\n    FETCH_PLAYERS,\n    FILTER_MEMBER,\n    FILTER_PLAYER,\n    REMOVE_PLAYER, REMOVE_RESERVATION,\n    UPDATE_PLAYER\n} from \"../actions/index\";\nimport _ from 'lodash';\n\nconst defaultState = {\n    members: [],\n    players: [],\n    partitionedPlayers: [[], []],\n    chunkedMembers: [],\n    filteredPlayers: null,\n    filteredMembers: null,\n    reservedPlayerNames: [],\n    playerNameFilter: null\n};\n\nconst CHUNK_SIZE = 3;\n\nexport default function (state = defaultState, action) {\n    let payload;\n    let players;\n\n    switch (action.type) {\n        case FETCH_PLAYERS:\n            payload = action.payload;\n\n            players = payload && payload.data && payload.data.players ? payload.data.players : [];\n\n            players = _.sortBy(players, (player) => player.name);\n\n            players = _.each(players, (player) => player.name = _.upperFirst(player.name));\n\n            return updateStateForPlayers(state, [...players]);\n\n        case CREATE_PLAYER:\n            const player = action.payload;\n            players = state.players;\n\n            players.push(player);\n\n            players = _.sortBy(players, (player) => player.name);\n\n            players = _.each(players, (player) => player.name = _.upperFirst(player.name));\n\n            return updateStateForPlayers(state, [...players]);\n\n        case FETCH_MEMBERS:\n            payload = action.payload;\n            let members = payload && payload.data && payload.data.members ? payload.data.members : [];\n\n            members = _.sortBy(members, (member) => member.playerName);\n\n            members = _.each(members, (member) => member.name = _.upperFirst(member.playerName));\n\n            const chunkedMembers = chunkify(members);\n\n            return { ...state, members, chunkedMembers };\n\n        case FILTER_PLAYER:\n            let playerNameFilter = action.payload;\n\n            return {\n                ...state,\n                playerNameFilter,\n                filteredPlayers: filteredPlayerList(state.players, state.reservedPlayerNames, playerNameFilter)\n            };\n\n        case FILTER_MEMBER:\n            const memberNameFilter = action.payload;\n            let filteredMembers = null;\n\n            if (!_.isEmpty(memberNameFilter)) {\n                filteredMembers = _.filter(state.members, nameContainsFilter(memberNameFilter));\n\n                filteredMembers = chunkify(filteredMembers);\n\n                filteredMembers.push([{ name: memberNameFilter, _id: \"searchedMember\", isNew: true }]);\n            }\n\n            return { ...state, filteredMembers };\n\n        case CANCEL_MEMBER_CREATE:\n            return { ...state, filteredMembers: null };\n\n        case REMOVE_PLAYER:\n            const playerToRemove = action.payload;\n            return updateStateForPlayers(state, _.reject(state.players, playerToRemove));\n\n        case UPDATE_PLAYER:\n            updatePlayerInformation(action.payload);\n            return updateStateForPlayers(state, [...state.players]);\n\n        case FETCH_COURTS:\n            let reservedPlayerNames = _.flatten(_.map(action.payload.data.reservations, 'players'));\n            reservedPlayerNames = _.map(reservedPlayerNames, _.upperFirst);\n\n            return updateStateForPlayers({\n                ...state,\n                reservedPlayerNames\n            });\n\n        case CREATE_COURT:\n            let playersOnCourt = action.payload.data.reservation.players;\n            playersOnCourt = _.map(playersOnCourt, _.upperFirst);\n\n            return updateStateForPlayers({\n                ...state,\n                reservedPlayerNames: _.union(state.reservedPlayerNames, playersOnCourt)\n            });\n\n        case REMOVE_RESERVATION:\n            let playersRemoved = action.payload.players;\n            playersRemoved = _.map(playersRemoved, _.upperFirst);\n\n            return updateStateForPlayers({\n                ...state,\n                reservedPlayerNames: _.without(state.reservedPlayerNames, ...playersRemoved)\n            });\n    }\n\n    return state;\n}\n\n// currying probably is not the best in production code but it is just so beautiful\nconst nameContainsFilter = (nameFilter) => ({ name }) => _.toLower(name).includes(_.toLower(nameFilter));\n\nfunction chunkify(list) {\n    if (list.length === 0) {\n        return [];\n    }\n\n    list = _.chunk(list, CHUNK_SIZE);\n\n    return list;\n}\n\nfunction updatePlayerInformation({ player, name, password }) {\n    player.name = name;\n    player.password = password;\n}\n\nfunction partitionedPlayerList(players, reservedPlayerNames) {\n    return _.partition(players, (player) => _.includes(reservedPlayerNames, player.name));\n}\n\nfunction filteredPlayerList(players, reservedPlayerNames, playerNameFilter) {\n    let filteredPlayers;\n\n    if (_.isEmpty(playerNameFilter)) {\n        filteredPlayers = null;\n    } else {\n        filteredPlayers = _.filter(players, nameContainsFilter(playerNameFilter));\n        filteredPlayers = partitionedPlayerList(filteredPlayers, reservedPlayerNames)\n    }\n\n    return filteredPlayers;\n}\n\nfunction updateStateForPlayers(state, players = state.players) {\n    return {\n        ...state,\n        players,\n        partitionedPlayers: partitionedPlayerList(players, state.reservedPlayerNames),\n        filteredPlayers: filteredPlayerList(players, state.reservedPlayerNames, state.playerNameFilter)\n    }\n}\n","/* eslint-disable default-case */\nimport {\n    CANCEL_MEMBER_CREATE,\n    CANCEL_PLAYER_UPDATE,\n    DESELECT_PLAYERS,\n    FILTER_MEMBER,\n    FILTER_PLAYER,\n    REMOVE_PLAYER,\n    SELECT_COURT_NUMBER,\n    SELECT_MEMBER,\n    SELECT_PLAYER,\n    START_UPDATING_PLAYER,\n    UPDATE_PLAYER,\n    SELECT_COURT_RANDOMS\n} from \"../actions\";\nimport _ from 'lodash';\n\nconst defaultState = {\n    players: {},\n    memberToCreate: {},\n    password: null,\n    playerToUpdate: {},\n    playerNameFilter: null,\n    memberNameFilter: null,\n    playerNames: [],\n    court: {},\n    useCourtRandoms: false,\n    courtCreatable: false\n};\n\nexport default function (state = defaultState, action) {\n\n    let player;\n\n    switch (action.type) {\n        case SELECT_PLAYER:\n            player = action.payload;\n            const players = updatePlayerSelections({ ...state.players }, player);\n\n            return {\n                ...state,\n                players,\n                playerNames: _.map(players, (player) => _.toLower(player.name)),\n                useCourtRandoms: false,\n                courtCreatable: _.size(players) >= 2\n            };\n\n        case DESELECT_PLAYERS:\n            return { ...state, players: {}, playerNames: [] };\n\n        case START_UPDATING_PLAYER:\n            player = action.payload;\n            return { ...state, playerToUpdate: player };\n\n        case UPDATE_PLAYER:\n            return { ...state, playerToUpdate: {} };\n\n        case CANCEL_PLAYER_UPDATE:\n            return { ...state, playerToUpdate: {} };\n\n        case SELECT_MEMBER:\n            const member = action.payload;\n\n            return { ...state, memberToCreate: member };\n\n        case SELECT_COURT_RANDOMS:\n            const futureUseCourtRandoms = !state.useCourtRandoms;\n\n            return { ...state, useCourtRandoms: futureUseCourtRandoms, courtCreatable: futureUseCourtRandoms };\n\n        case CANCEL_MEMBER_CREATE:\n            return { ...state, memberToCreate: {} };\n\n        case REMOVE_PLAYER:\n            return { ...state, playerNameFilter: null };\n\n        case FILTER_PLAYER:\n            const playerNameFilter = action.payload;\n\n            return { ...state, playerNameFilter };\n\n        case FILTER_MEMBER:\n            const memberNameFilter = action.payload;\n\n            return { ...state, memberNameFilter };\n\n        case SELECT_COURT_NUMBER:\n            const courtNumber = action.payload;\n\n            return { ...state, courtNumber }\n    }\n\n    return state;\n}\n\nfunction updatePlayerSelections(players, player) {\n    if (_.has(players, player._id)) {\n        _.unset(players, player._id);\n    } else if (_.values(players).length < 2) {\n        _.set(players, player._id, player);\n    }\n\n    return players;\n}\n","/* eslint-disable default-case */\nimport {CREATE_COURT, FETCH_COURTS, REMOVE_RESERVATION} from \"../actions/index\";\nimport _ from 'lodash';\nimport moment from 'moment-timezone';\n\nconst now = () => new Date();\n\nexport default function (state = { current: [], upcoming: [], reservations: [], courtGroups: {} }, action) {\n\n    let reservations;\n\n    switch (action.type) {\n        case FETCH_COURTS:\n            reservations = action.payload.data.reservations;\n            return splitReservations(reservations);\n\n        case CREATE_COURT:\n            const court = action.payload.data.reservation;\n            reservations = state.reservations;\n\n            reservations.push(court);\n\n            return splitReservations(reservations);\n\n        case REMOVE_RESERVATION:\n            const reservationToken = action.payload.token;\n\n            reservations = _.reject(state.reservations, ({ token }) => token === reservationToken);\n\n            return splitReservations(reservations);\n    }\n\n    return state;\n}\n\nfunction splitReservations(reservations, state) {\n    const formattedReservations =  _.map(reservations, preformattedReservation);\n\n    const courtGroups = _.groupBy(_.map(formattedReservations, formatReservation), 'courtNumber');\n\n    const randomlessReservations = _.reject(formattedReservations, 'randoms');\n\n    const sortedReservations = _.sortBy(randomlessReservations, ['courtNumber', 'startAt']);\n    const courts = mergeReservations(sortedReservations);\n    const sortedCourts = _.sortBy(courts, ['startAt']);\n    const courtsWithReservations = _.each(sortedCourts, (court) => court.reservations = courtGroups[court.courtNumber]);\n    const [currentCourts, upcomingCourts] = _.partition(courtsWithReservations, 'isCurrentCourt');\n\n    const current = _.map(currentCourts, formatCurrentCourt);\n    const upcoming = _.map(upcomingCourts, formatUpcomingCourt);\n\n    return {\n        ...state,\n        current,\n        upcoming,\n        reservations,\n        courtGroups\n    };\n}\n\nfunction preformattedReservation(court) {\n    return {\n        ...court,\n        courtNumber: court.courtNumber,\n        startAt: moment(court.startAt).tz('America/Los_Angeles'),\n        endAt: moment(court.endAt).tz('America/Los_Angeles'),\n        randoms: court.randoms,\n        isCurrentCourt: now() - court.startAt >= 0,\n        reservations: []\n    }\n}\n\nfunction reservationsCanBeCombined(previous, next) {\n    return previous &&\n        previous.courtNumber === next.courtNumber &&\n        previous.randoms === next.randoms &&\n        previous.startAt.isSame(next.endAt)\n}\n\nfunction mergeReservations(reservations) {\n    return _.reduceRight(reservations, function (flattened, next) {\n        const previous = _.last(flattened);\n        if (reservationsCanBeCombined(previous, next)) {\n            previous.endAt = next.startAt;\n            previous.isCurrentCourt |= next.isCurrentCourt;\n            return flattened;\n        }\n        return flattened.concat(next);\n    }, []);\n}\n\nfunction formatReservation(reservation) {\n    const startString = reservation.isCurrentCourt ? \"Started at \" : \"Starting at \";\n\n    return {\n        ...reservation,\n        time: startString + reservation.startAt.format(\"hh:mm\")\n    }\n}\n\nfunction formatCurrentCourt(court) {\n    const duration = moment.duration(court.endAt - now());\n\n    return {\n        ...court,\n        time: `${formatTime(duration)} remaining`\n    };\n}\n\nfunction formatUpcomingCourt(court) {\n    const duration = moment.duration(court.startAt - now());\n\n    return {\n        ...court,\n        time: `${formatTime(duration)} wait`\n    };\n}\n\nfunction formatTime(duration) {\n    let formatString = \"mm\";\n\n    if (duration.hours) {\n        formatString = \"HH:mm\";\n    }\n\n    return moment.utc(duration.asMilliseconds()).format(formatString);\n}\n","import {SET_TOAST} from \"../actions/index\";\nimport {CLEAR_MODAL, DISPLAY_MODAL} from \"../actions\";\nimport toast from \"../utils/toast\";\n\nexport default function (state = { toast: null, modal: false }, action) {\n\n    switch (action.type) {\n        case SET_TOAST:\n            toast(action.payload);\n            return state;\n\n        case DISPLAY_MODAL:\n            const modalToDisplay = action.payload;\n            return { ...state, modalToDisplay };\n\n        case CLEAR_MODAL:\n            return { ...state, modalToDisplay: false };\n    }\n\n    return state;\n}","import {combineReducers} from \"redux\";\nimport PersonReducer from \"./people_reducer\";\nimport SelectorReducer from \"./selector_reducer\";\nimport CourtReducer from \"./court_reducer\";\nimport DisplayReducer from \"./display_reducer\";\n\nconst rootReducer = combineReducers({\n    selected: SelectorReducer,\n    people: PersonReducer,\n    courts: CourtReducer,\n    displays: DisplayReducer\n});\n\nexport default rootReducer;\n","import {message} from \"antd\";\n\nexport default function Toast(toastMessage) {\n    if (toastMessage) {\n        message.error(toastMessage);\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport ReduxPromise from \"redux-promise\";\nimport './style/index.css';\nimport App from './components/App';\nimport reducers from \"./reducers\";\nimport * as serviceWorker from './serviceWorker';\n\nconst createStoreWithMiddleware = applyMiddleware(ReduxPromise)(createStore);\n\nReactDOM.render(\n    <Provider store={createStoreWithMiddleware(reducers)}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}