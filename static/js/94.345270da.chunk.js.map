{"version":3,"sources":["../node_modules/@ionic/core/dist/esm/legacy/ion-split-pane-md.entry.js"],"names":["__webpack_require__","r","__webpack_exports__","d","SplitPane","_ionic_7d8dfe6a_js__WEBPACK_IMPORTED_MODULE_0__","SPLIT_PANE_MAIN","SPLIT_PANE_SIDE","QUERY","xs","sm","md","lg","xl","never","hostRef","Object","this","visible","disabled","when","ionSplitPaneVisible","isServer","win","prototype","visibleChanged","detail","isPane","bind","emit","componentDidLoad","styleChildren","updateState","componentDidUnload","rmL","undefined","_this","query","mediaQuery","length","matchMedia","callback_1","q","matches","mediaList_1","addListener","removeListener","element","parentElement","el","classList","contains","contentId","children","nu","childElementCount","foundMain","i","child","isMain","id","hasAttribute","console","warn","setPaneClass","hostData","_a","mode","class","defineProperty","get","enumerable","configurable","render","toAdd","toRemove","add","remove"],"mappings":"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","file":"static/js/94.345270da.chunk.js","sourcesContent":["import { r as registerInstance, e as createEvent, f as getContext, d as getIonMode, j as getElement, h, H as Host } from './ionic-7d8dfe6a.js';\nvar SPLIT_PANE_MAIN = 'split-pane-main';\nvar SPLIT_PANE_SIDE = 'split-pane-side';\nvar QUERY = {\n  'xs': '(min-width: 0px)',\n  'sm': '(min-width: 576px)',\n  'md': '(min-width: 768px)',\n  'lg': '(min-width: 992px)',\n  'xl': '(min-width: 1200px)',\n  'never': ''\n};\n\nvar SplitPane =\n/** @class */\nfunction () {\n  function SplitPane(hostRef) {\n    registerInstance(this, hostRef);\n    this.visible = false;\n    /**\n     * If `true`, the split pane will be hidden.\n     */\n\n    this.disabled = false;\n    /**\n     * When the split-pane should be shown.\n     * Can be a CSS media query expression, or a shortcut expression.\n     * Can also be a boolean expression.\n     */\n\n    this.when = QUERY['lg'];\n    this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\n    this.isServer = getContext(this, \"isServer\");\n    this.win = getContext(this, \"window\");\n  }\n\n  SplitPane.prototype.visibleChanged = function (visible) {\n    var detail = {\n      visible: visible,\n      isPane: this.isPane.bind(this)\n    };\n    this.ionSplitPaneVisible.emit(detail);\n  };\n\n  SplitPane.prototype.componentDidLoad = function () {\n    this.styleChildren();\n    this.updateState();\n  };\n\n  SplitPane.prototype.componentDidUnload = function () {\n    if (this.rmL) {\n      this.rmL();\n      this.rmL = undefined;\n    }\n  };\n\n  SplitPane.prototype.updateState = function () {\n    var _this = this;\n\n    if (this.isServer) {\n      return;\n    }\n\n    if (this.rmL) {\n      this.rmL();\n      this.rmL = undefined;\n    } // Check if the split-pane is disabled\n\n\n    if (this.disabled) {\n      this.visible = false;\n      return;\n    } // When query is a boolean\n\n\n    var query = this.when;\n\n    if (typeof query === 'boolean') {\n      this.visible = query;\n      return;\n    } // When query is a string, let's find first if it is a shortcut\n\n\n    var mediaQuery = QUERY[query] || query; // Media query is empty or null, we hide it\n\n    if (mediaQuery.length === 0) {\n      this.visible = false;\n      return;\n    }\n\n    if (this.win.matchMedia) {\n      // Listen on media query\n      var callback_1 = function callback_1(q) {\n        _this.visible = q.matches;\n      };\n\n      var mediaList_1 = this.win.matchMedia(mediaQuery);\n      mediaList_1.addListener(callback_1);\n\n      this.rmL = function () {\n        return mediaList_1.removeListener(callback_1);\n      };\n\n      this.visible = mediaList_1.matches;\n    }\n  };\n\n  SplitPane.prototype.isPane = function (element) {\n    if (!this.visible) {\n      return false;\n    }\n\n    return element.parentElement === this.el && element.classList.contains(SPLIT_PANE_SIDE);\n  };\n\n  SplitPane.prototype.styleChildren = function () {\n    if (this.isServer) {\n      return;\n    }\n\n    var contentId = this.contentId;\n    var children = this.el.children;\n    var nu = this.el.childElementCount;\n    var foundMain = false;\n\n    for (var i = 0; i < nu; i++) {\n      var child = children[i];\n      var isMain = contentId !== undefined ? child.id === contentId : child.hasAttribute('main');\n\n      if (isMain) {\n        if (foundMain) {\n          console.warn('split pane cannot have more than one main node');\n          return;\n        }\n\n        foundMain = true;\n      }\n\n      setPaneClass(child, isMain);\n    }\n\n    if (!foundMain) {\n      console.warn('split pane does not have a specified main node');\n    }\n  };\n\n  SplitPane.prototype.hostData = function () {\n    var _a;\n\n    var mode = getIonMode(this);\n    return {\n      class: (_a = {}, _a[\"\" + mode] = true, // Used internally for styling\n      _a[\"split-pane-\" + mode] = true, _a['split-pane-visible'] = this.visible, _a)\n    };\n  };\n\n  Object.defineProperty(SplitPane.prototype, \"el\", {\n    get: function get() {\n      return getElement(this);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SplitPane, \"watchers\", {\n    get: function get() {\n      return {\n        \"visible\": [\"visibleChanged\"],\n        \"disabled\": [\"updateState\"],\n        \"when\": [\"updateState\"]\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  SplitPane.prototype.render = function () {\n    return h(Host, this.hostData());\n  };\n\n  Object.defineProperty(SplitPane, \"style\", {\n    get: function get() {\n      return \"ion-split-pane{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}.split-pane-visible>.split-pane-main,.split-pane-visible>.split-pane-side{left:0;right:0;top:0;bottom:0;position:relative;-ms-flex:1;flex:1;-webkit-box-shadow:none!important;box-shadow:none!important;z-index:0}.split-pane-visible>.split-pane-side:not(ion-menu),.split-pane-visible>ion-menu.split-pane-side.menu-enabled{display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}.split-pane-side:not(ion-menu){display:none}.split-pane-visible>.split-pane-side{-ms-flex-order:-1;order:-1}.split-pane-visible>.split-pane-side[side=end]{-ms-flex-order:1;order:1}.split-pane-md{--border:1px solid var(--ion-item-border-color,var(--ion-border-color,var(--ion-color-step-150,rgba(0,0,0,0.13))))}.split-pane-md.split-pane-visible>.split-pane-side{min-width:270px;max-width:28%;border-right:var(--border);border-left:0}.split-pane-md.split-pane-visible>.split-pane-side[side=end]{min-width:270px;max-width:28%;border-right:0;border-left:var(--border)}\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return SplitPane;\n}();\n\nfunction setPaneClass(el, isMain) {\n  var toAdd;\n  var toRemove;\n\n  if (isMain) {\n    toAdd = SPLIT_PANE_MAIN;\n    toRemove = SPLIT_PANE_SIDE;\n  } else {\n    toAdd = SPLIT_PANE_SIDE;\n    toRemove = SPLIT_PANE_MAIN;\n  }\n\n  var classList = el.classList;\n  classList.add(toAdd);\n  classList.remove(toRemove);\n}\n\nexport { SplitPane as ion_split_pane };"],"sourceRoot":""}